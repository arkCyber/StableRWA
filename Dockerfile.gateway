# =====================================================================================
# File: Dockerfile.gateway
# Description: Enterprise-grade Dockerfile for Gateway Service
# Author: arkSong (arksong2018@gmail.com)
# Framework: StableRWA - Enterprise RWA Tokenization Technology Framework Platform
# =====================================================================================

# Multi-stage build for enterprise security and optimization
FROM rust:1.75-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN useradd -m -u 1001 appuser

# Set working directory
WORKDIR /app

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./
COPY service-gateway/Cargo.toml ./service-gateway/
COPY core-*/Cargo.toml ./core-*/

# Create dummy source files to build dependencies
RUN mkdir -p service-gateway/src core-security/src core-database/src core-observability/src \
    && echo "fn main() {}" > service-gateway/src/main.rs \
    && echo "// dummy" > core-security/src/lib.rs \
    && echo "// dummy" > core-database/src/lib.rs \
    && echo "// dummy" > core-observability/src/lib.rs

# Build dependencies
RUN cargo build --release --bin service-gateway
RUN rm -rf service-gateway/src core-*/src

# Copy actual source code
COPY . .

# Build the application
RUN cargo build --release --bin service-gateway

# Runtime stage
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -m -u 1001 appuser

# Copy binary from builder
COPY --from=builder /app/target/release/service-gateway /usr/local/bin/gateway

# Copy configuration files
COPY --from=builder /app/config /app/config

# Set ownership
RUN chown -R appuser:appuser /usr/local/bin/gateway /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

# Set environment variables
ENV RUST_LOG=info
ENV RUST_BACKTRACE=1

# Run the application
CMD ["gateway"]
