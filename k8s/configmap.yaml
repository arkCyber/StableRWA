# =====================================================================================
# ConfigMaps for RWA Platform
# =====================================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: rwa-platform-config
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: config
data:
  # Environment configuration
  RWA_ENV: "production"
  LOG_LEVEL: "info"
  API_BASE_URL: "https://api.rwa-platform.com"
  
  # Database configuration
  DATABASE_HOST: "postgres-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "rwa_platform"
  DATABASE_USER: "rwa_user"
  
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Observability configuration
  JAEGER_ENDPOINT: "http://jaeger-collector:14268/api/traces"
  PROMETHEUS_ENDPOINT: "http://prometheus:9090"
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  
  # Blockchain configuration
  ETHEREUM_CHAIN_ID: "1"
  ETHEREUM_CONFIRMATIONS: "12"
  ETHEREUM_GAS_MULTIPLIER: "1.0"
  
  # External services
  SENDGRID_FROM_EMAIL: "noreply@rwa-platform.com"
  SENDGRID_FROM_NAME: "RWA Platform"
  AWS_REGION: "us-east-1"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rwa-platform-config-dev
  namespace: rwa-platform-dev
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: config
    environment: development
data:
  # Environment configuration
  RWA_ENV: "development"
  LOG_LEVEL: "debug"
  API_BASE_URL: "http://localhost:8080"
  
  # Database configuration
  DATABASE_HOST: "postgres-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "rwa_dev"
  DATABASE_USER: "rwa_user"
  
  # Redis configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Observability configuration
  JAEGER_ENDPOINT: "http://jaeger-collector:14268/api/traces"
  PROMETHEUS_ENDPOINT: "http://prometheus:9090"
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  
  # Blockchain configuration (testnet)
  ETHEREUM_CHAIN_ID: "5"
  ETHEREUM_CONFIRMATIONS: "6"
  ETHEREUM_GAS_MULTIPLIER: "1.0"
  
  # External services
  SENDGRID_FROM_EMAIL: "dev@rwa-platform.com"
  SENDGRID_FROM_NAME: "RWA Platform Dev"
  AWS_REGION: "us-east-1"

---
# Prometheus configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "rules/*.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'rwa-gateway'
        static_configs:
          - targets: ['gateway-service:8080']
        metrics_path: '/metrics'
        scrape_interval: 10s

      - job_name: 'rwa-user-service'
        static_configs:
          - targets: ['user-service:8081']
        metrics_path: '/metrics'
        scrape_interval: 10s

      - job_name: 'rwa-asset-service'
        static_configs:
          - targets: ['asset-service:8082']
        metrics_path: '/metrics'
        scrape_interval: 10s

      - job_name: 'rwa-payment-service'
        static_configs:
          - targets: ['payment-service:8083']
        metrics_path: '/metrics'
        scrape_interval: 10s

      - job_name: 'postgres-exporter'
        static_configs:
          - targets: ['postgres-exporter:9187']

      - job_name: 'redis-exporter'
        static_configs:
          - targets: ['redis-exporter:9121']

      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

---
# Grafana configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: config
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true

    [grafana_net]
    url = https://grafana.net

    [log]
    mode = console

    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

    [server]
    root_url = http://localhost:3000/

    [security]
    admin_user = admin
    admin_password = admin

  datasources.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true

  dashboards.yml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
