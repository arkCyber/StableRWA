# =====================================================================================
# Secrets for RWA Platform
# Note: In production, these should be created using external secret management
# =====================================================================================

apiVersion: v1
kind: Secret
metadata:
  name: rwa-platform-secrets
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Database credentials (base64 encoded)
  DATABASE_PASSWORD: cndBX3Bhc3N3b3Jk  # rwa_password
  
  # JWT and encryption keys (base64 encoded)
  JWT_SECRET: cHJvZHVjdGlvbl9qd3Rfc2VjcmV0X2tleV8zMl9jaGFyYWN0ZXJz  # production_jwt_secret_key_32_characters
  ENCRYPTION_KEY: cHJvZHVjdGlvbl9lbmNyeXB0aW9uX2tleV8zMl9jaGFyYWN0ZXJz  # production_encryption_key_32_characters
  
  # External service API keys (base64 encoded - replace with actual values)
  STRIPE_SECRET_KEY: c2tfdGVzdF95b3VyX3N0cmlwZV9zZWNyZXRfa2V5  # sk_test_your_stripe_secret_key
  STRIPE_WEBHOOK_SECRET: d2hfc2VjX3lvdXJfd2ViaG9va19zZWNyZXQ=  # wh_sec_your_webhook_secret
  SENDGRID_API_KEY: U0cuWW91cl9TZW5kR3JpZF9BUElfS2V5  # SG.Your_SendGrid_API_Key
  
  # AWS credentials (base64 encoded)
  AWS_ACCESS_KEY_ID: WU9VUl9BV1NfQUNDRVNTX0tFWV9JRA==  # YOUR_AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: WW91cl9BV1NfU2VjcmV0X0FjY2Vzc19LZXk=  # Your_AWS_Secret_Access_Key
  
  # Blockchain RPC URLs (base64 encoded)
  ETHEREUM_RPC_URL: aHR0cHM6Ly9tYWlubmV0LmluZnVyYS5pby92My9ZT1VSX1BST0pFQ1RfSUQ=  # https://mainnet.infura.io/v3/YOUR_PROJECT_ID
  POLYGON_RPC_URL: aHR0cHM6Ly9wb2x5Z29uLW1haW5uZXQuaW5mdXJhLmlvL3YzL1lPVVJfUFJPSkVDVF9JRA==  # https://polygon-mainnet.infura.io/v3/YOUR_PROJECT_ID

---
apiVersion: v1
kind: Secret
metadata:
  name: rwa-platform-secrets-dev
  namespace: rwa-platform-dev
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: secrets
    environment: development
type: Opaque
data:
  # Database credentials (base64 encoded)
  DATABASE_PASSWORD: cndBX3Bhc3N3b3Jk  # rwa_password
  
  # JWT and encryption keys (base64 encoded)
  JWT_SECRET: ZGV2ZWxvcG1lbnRfand0X3NlY3JldF9rZXlfMzJfY2hhcmFjdGVycw==  # development_jwt_secret_key_32_characters
  ENCRYPTION_KEY: ZGV2ZWxvcG1lbnRfZW5jcnlwdGlvbl9rZXlfMzJfY2hhcmFjdGVycw==  # development_encryption_key_32_characters
  
  # External service API keys (base64 encoded - test keys)
  STRIPE_SECRET_KEY: c2tfdGVzdF95b3VyX3N0cmlwZV9zZWNyZXRfa2V5  # sk_test_your_stripe_secret_key
  STRIPE_WEBHOOK_SECRET: d2hfc2VjX3lvdXJfd2ViaG9va19zZWNyZXQ=  # wh_sec_your_webhook_secret
  SENDGRID_API_KEY: U0cuWW91cl9TZW5kR3JpZF9BUElfS2V5  # SG.Your_SendGrid_API_Key
  
  # AWS credentials (base64 encoded)
  AWS_ACCESS_KEY_ID: WU9VUl9BV1NfQUNDRVNTX0tFWV9JRA==  # YOUR_AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: WW91cl9BV1NfU2VjcmV0X0FjY2Vzc19LZXk=  # Your_AWS_Secret_Access_Key
  
  # Blockchain RPC URLs (base64 encoded - testnet)
  ETHEREUM_RPC_URL: aHR0cHM6Ly9nb2VybGkuaW5mdXJhLmlvL3YzL1lPVVJfUFJPSkVDVF9JRA==  # https://goerli.infura.io/v3/YOUR_PROJECT_ID
  POLYGON_RPC_URL: aHR0cHM6Ly9wb2x5Z29uLW11bWJhaS5pbmZ1cmEuaW8vdjMvWU9VUl9QUk9KRUNUX0lE  # https://polygon-mumbai.infura.io/v3/YOUR_PROJECT_ID

---
# TLS Secret for HTTPS
apiVersion: v1
kind: Secret
metadata:
  name: rwa-platform-tls
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Replace with actual TLS certificate and key (base64 encoded)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...  # Your TLS certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...  # Your TLS private key

---
# Docker registry secret for pulling private images
apiVersion: v1
kind: Secret
metadata:
  name: rwa-platform-registry
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5jb20iOnsidXNlcm5hbWUiOiJ1c2VyIiwicGFzc3dvcmQiOiJwYXNzIiwiYXV0aCI6ImRYTmxjanB3WVhOeiJ9fX0=

---
# Service account token secret
apiVersion: v1
kind: Secret
metadata:
  name: rwa-platform-sa-token
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: serviceaccount
  annotations:
    kubernetes.io/service-account.name: rwa-platform-sa
type: kubernetes.io/service-account-token

---
# External secrets operator configuration (if using)
apiVersion: v1
kind: Secret
metadata:
  name: vault-secret
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: rwa-platform
    app.kubernetes.io/component: vault
type: Opaque
data:
  # Vault configuration for external secrets
  vault-token: WW91cl9WYXVsdF9Ub2tlbg==  # Your_Vault_Token
  vault-url: aHR0cHM6Ly92YXVsdC5leGFtcGxlLmNvbQ==  # https://vault.example.com

---
# Monitoring secrets
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: rwa-platform
  labels:
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Grafana admin password
  grafana-admin-password: YWRtaW4=  # admin
  
  # Prometheus basic auth (if needed)
  prometheus-username: cHJvbWV0aGV1cw==  # prometheus
  prometheus-password: cHJvbWV0aGV1c19wYXNzd29yZA==  # prometheus_password
  
  # Alertmanager configuration
  alertmanager-config: |
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alerts@rwa-platform.com'
    
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
    
    receivers:
    - name: 'web.hook'
      email_configs:
      - to: 'admin@rwa-platform.com'
        subject: 'RWA Platform Alert'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          {{ end }}
